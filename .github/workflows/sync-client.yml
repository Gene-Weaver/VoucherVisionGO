name: Sync VoucherVisionGO Client

on:
  push:
    branches:
      - main
    paths:
      - 'client.py'
      - 'list_prompts.py'
      - 'demo/**'
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  sync-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout VoucherVisionGO repository
        uses: actions/checkout@v3
        with:
          path: source-repo
          fetch-depth: 1

      - name: Checkout client-only repository
        uses: actions/checkout@v3
        with:
          repository: Gene-Weaver/VoucherVisionGO-client
          path: client-repo
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Debug repository contents
        run: |
          echo "=== SOURCE REPOSITORY ==="
          ls -la source-repo/
          echo ""
          echo "=== CLIENT REPOSITORY ==="
          ls -la client-repo/
          echo ""
          echo "=== CHECKING FOR FILES TO SYNC ==="
          for file in "client.py" "list_prompts.py"; do
            if [ -f "source-repo/$file" ]; then
              echo "$file found in source repository"
            else
              echo "$file NOT found in source repository"
              find source-repo -name "$file" | xargs -I{} echo "Found at: {}"
            fi
          done
          
          if [ -d "source-repo/demo" ]; then
            echo "demo directory found in source repository"
            ls -la source-repo/demo/
          else
            echo "demo directory NOT found in source repository"
            find source-repo -name "demo" -type d | xargs -I{} echo "Found at: {}"
          fi

      - name: Copy files and update README sync information
        run: |
          # Ensure destination directories exist
          mkdir -p client-repo/demo
          
          # Copy client.py
          if [ -f source-repo/client.py ]; then
            echo "Copying client.py to client repository..."
            cp -v source-repo/client.py client-repo/
          else
            echo "ERROR: client.py not found in source repository"
            exit 1
          fi
          
          # Copy list_prompts.py
          if [ -f source-repo/list_prompts.py ]; then
            echo "Copying list_prompts.py to client repository..."
            cp -v source-repo/list_prompts.py client-repo/
          else
            echo "WARNING: list_prompts.py not found in source repository"
          fi
          
          # Copy demo directory recursively
          if [ -d source-repo/demo ]; then
            echo "Copying demo directory to client repository..."
            cp -rv source-repo/demo/* client-repo/demo/
          else
            echo "WARNING: demo directory not found in source repository"
          fi
          
          # Check if README.md exists
          if [ ! -f client-repo/README.md ]; then
            echo "ERROR: README.md not found in client repository"
            exit 1
          fi
          
          echo "Updating README.md timestamp..."
          # Check if the timestamp line exists
          if grep -q "Last synchronized:" client-repo/README.md; then
            echo "Updating existing timestamp line"
            sed -i "s/Last synchronized:.*$/Last synchronized: $(date)/" client-repo/README.md
          else
            echo "Adding new timestamp line"
            # Simple approach: add timestamp after the About section header
            sed -i "/## About/a\\Last synchronized: $(date)" client-repo/README.md
          fi
          
          # Commit and push changes
          cd client-repo
          git config user.name "VoucherVision Bot"
          git config user.email "bot@github.com"
          
          # Add all the synced files
          git add client.py list_prompts.py demo/ README.md
          
          # Check if there are changes
          if git diff --cached --quiet; then
            echo "No changes detected in files"
          else 
            echo "Changes detected, committing..."
            git commit -m "Sync client.py, list_prompts.py, and demo folder from VoucherVisionGO repository [$(date)]"
            echo "Pushing changes..."
            git push || { echo "Push failed. Check token permissions"; exit 1; }
          fi